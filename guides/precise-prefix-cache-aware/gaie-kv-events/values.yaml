inferenceExtension:
  replicas: 1
  image:
    # In the precise example, either image will work
    ###################
    name: llm-d-inference-scheduler
    hub: ghcr.io/llm-d
    tag: v0.3.0
    ###################
    # name: epp
    # hub: registry.k8s.io/gateway-api-inference-extension
    # tag: v0.5.1
    ###################
    pullPolicy: Always
  extProcPort: 9002
  # ZMQ port for `kvevents.Pool` (KVEvents subscriber)
  extraContainerPorts:
    - name: zmq
      containerPort: 5557
      protocol: TCP
  extraServicePorts:
    - name: zmq
      port: 5557
      targetPort: 5557
      protocol: TCP
  # huggingface token for tokenizer
  env:
    - name: HF_TOKEN
      valueFrom:
        secretKeyRef:
          name: llm-d-hf-token
          key: HF_TOKEN
  logVerbosity: 4

  pluginsConfigFile: "prefix-cache-tracking-config.yaml"
  pluginsCustomConfig:
    prefix-cache-tracking-config.yaml: |
      apiVersion: inference.networking.x-k8s.io/v1alpha1
      kind: EndpointPickerConfig
      plugins:
        - type: single-profile-handler
        - type: prefix-cache-scorer
          parameters:
            mode: cache_tracking
            indexerConfig:
              tokenProcessorConfig:
                blockSize: 64                         # must match vLLM block size if not default (16)
                hashSeed: "42"                        # must match PYTHONHASHSEED in vLLM pods
              kvBlockIndexConfig:
                enableMetrics: true                   # enable kv-block index metrics (prometheus)
                metricsLoggingInterval: 60000000000   # log kv-block metrics as well (1m in nanoseconds)
        - type: queue-scorer
        - type: max-score-picker
      schedulingProfiles:
        - name: default
          plugins:
            - pluginRef: prefix-cache-scorer
              weight: 2.0
            - pluginRef: queue-scorer
              weight: 1.0
            - pluginRef: max-score-picker
inferencePool:
  targetPortNumber: 8000
  modelServerType: vllm
  modelServers:
    matchLabels:
      llm-d.ai/inferenceServing: "true"
