inferenceExtension:
  replicas: 1
  image:
    # In the precise example, either image will work
    ###################
    name: llm-d-inference-scheduler
    hub: ghcr.io/llm-d
    tag: v0.3.0
    ###################
    # name: epp
    # hub: registry.k8s.io/gateway-api-inference-extension
    # tag: v1.0.1
    ###################
    pullPolicy: Always
  extProcPort: 9002
  # ZMQ port for `kvevents.Pool` (KVEvents subscriber)
  extraContainerPorts:
    - name: zmq
      containerPort: 5557
      protocol: TCP
  extraServicePorts:
    - name: zmq
      port: 5557
      targetPort: 5557
      protocol: TCP
  # huggingface token for tokenizer
  env:
    - name: HF_TOKEN
      valueFrom:
        secretKeyRef:
          name: llm-d-hf-token
          key: HF_TOKEN

  flags:
    # Log verbosity
    - name: v
      value: 4

  pluginsConfigFile: "prefix-cache-tracking-config.yaml"
  pluginsCustomConfig:
    prefix-cache-tracking-config.yaml: |
      # apiVersion: inference.networking.x-k8s.io/v1alpha1
      # kind: EndpointPickerConfig
      # plugins:
      # - type: single-profile-handler
      # - type: random-picker
      # schedulingProfiles:
      # - name: default
      #   plugins:
      #     - pluginRef: random-picker
      apiVersion: inference.networking.x-k8s.io/v1alpha1
      kind: EndpointPickerConfig
      plugins:
      - type: queue-scorer
      - type: kv-cache-utilization-scorer
      - type: prefix-cache-scorer
      schedulingProfiles:
      - name: default
        plugins:
        - pluginRef: queue-scorer
        - pluginRef: kv-cache-utilization-scorer
        - pluginRef: prefix-cache-scorer
inferencePool:
  targetPortNumber: 8000
  modelServerType: vllm
  modelServers:
    matchLabels:
      llm-d.ai/inferenceServing: "true"
